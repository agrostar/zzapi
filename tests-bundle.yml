# yaml-language-server: $schema=zzapi-bundle.schema.json

# This bundle contains a series of test requests against various endpoints,
# most of them being the postman echo service. We use this to both serve as
# an example of how to create test bundles as well as testing zzapi runner itself.

common:
  baseUrl: https://postman-echo.com
  headers:
    - { name: Content-type, value: application/json }
  tests:
    code: 200

requests:
  # Test a simple get request
  - name: get
    method: GET
    url: /get
    params:
      - { name: foo1, value: bar1 }
      - { name: foo2, value: bar2 }
    tests:
      json:
        - { path: args.foo1, eq: bar1 }
        - { path: args.foo2, eq: bar2 }

  # Test a simple JSON post request
  - name: post
    url: /post
    method: POST
    headers: 
      - { name: x, value: y }
    body: |-
      {
        "foo1": "bar1",
        "foo2": 42
      }
    tests:
      json:
        - { path: "data.foo1", eq: "bar1" }
        - { path: "data.foo2", gt: 41 }
        - { path: "data.foo2", eq: 42 }
      headers:
        - { name: Content-type, eq: application/json }

  # Test a simple not found URL
  - name: notfound
    url: /notfound
    method: GET
    tests:
      code: 404

  # Test URL encoding
  - name: encoding
    method: GET
    url: /get
    params:
      - { name: foo, value: 30% of 200 is 60 }
    tests:
      json:
        - { path: url, eq: https://postman-echo.com/get?foo=30%25%20of%20200%20is%2060 }
        - { path: args, eq: 30% of 200 is 60 }

  # Test disable URL encoding
  - name: no-encoding
    method: GET
    url: /get
    params:
      - { name: foo, value: 30%25+of+200, encode: false }
    tests:
      json:
        - { path: url, eq: https://postman-echo.com/get?foo=30%25%+of%+200 }
        - { path: args, eq: 30% of 200 }
